{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/liamhandasyde/Desktop/Code/POCS/nextjs-poc/clients/app/helpers/ApiService.ts"],"sourcesContent":["/**\n * @description Convenience method implementing \n * @param {string} url Absolute url: https://...\n * @returns \n */\nexport const getAsync = async <T>(url: string): Promise<T | Error> => {\n\n    try{\n        const response: Response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            },\n        });\n    \n        if(response.ok){\n            return await response.json() as T;\n        }\n\n        return new Error(`${response.status}, something went wrong`);\n        \n    } catch(error: unknown){\n        return handleHttpResponseError(error);\n    }\n}\n\nconst handleHttpResponseError = (error: unknown): Error => {\n    if(error === null || error === undefined){\n        return new Error('Something went wrong');\n    }\n\n    return new Error(error.toString());\n}"],"names":[],"mappings":"AAAA;;;;CAIC;;;AACM,MAAM,WAAW,OAAU;IAE9B,IAAG;QACC,MAAM,WAAqB,MAAM,MAAM,KAAK;YACxC,QAAQ;YACR,SAAS;gBACL,UAAU;YACd;QACJ;QAEA,IAAG,SAAS,EAAE,EAAC;YACX,OAAO,MAAM,SAAS,IAAI;QAC9B;QAEA,OAAO,IAAI,MAAM,GAAG,SAAS,MAAM,CAAC,sBAAsB,CAAC;IAE/D,EAAE,OAAM,OAAe;QACnB,OAAO,wBAAwB;IACnC;AACJ;AAEA,MAAM,0BAA0B,CAAC;IAC7B,IAAG,UAAU,QAAQ,UAAU,WAAU;QACrC,OAAO,IAAI,MAAM;IACrB;IAEA,OAAO,IAAI,MAAM,MAAM,QAAQ;AACnC"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/liamhandasyde/Desktop/Code/POCS/nextjs-poc/clients/app/payments/%5Bslug%5D/page.tsx"],"sourcesContent":["import IPayment from \"@/app/interfaces/IPaymentModels\";\nimport { getAsync } from \"@/app/helpers/ApiService\";\n\n/**\n * @description /simple-forms/{id or slug} SSR Server Side Rendered Component. \n * @param {Promise<string>} param0 \n * @returns \n */\nexport default async function Payment({ params }: { params: Promise<{slug: string}> }) {\n\n    const { slug: paymentId } = await params;\n\n    const response = await getAsync<IPayment>(`${process.env.BASE_API}payments/${paymentId}`);\n    if(response instanceof Error){\n        console.error(`Error: ${response.message}`);\n        return <div>Error: {response.message}</div>\n    }\n\n    return <h1>Slug / PaymentId: {paymentId}, Cardholder name: {response?.cardHolderName}, Amount: ${response?.amount}</h1>\n}"],"names":[],"mappings":";;;;AACA;;;AAOe,eAAe,QAAQ,EAAE,MAAM,EAAuC;IAEjF,MAAM,EAAE,MAAM,SAAS,EAAE,GAAG,MAAM;IAElC,MAAM,WAAW,MAAM,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD,EAAY,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW;IACxF,IAAG,oBAAoB,OAAM;QACzB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,SAAS,OAAO,EAAE;QAC1C,qBAAO,8OAAC;;gBAAI;gBAAQ,SAAS,OAAO;;;;;;;IACxC;IAEA,qBAAO,8OAAC;;YAAG;YAAmB;YAAU;YAAoB,UAAU;YAAe;YAAY,UAAU;;;;;;;AAC/G"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///Users/liamhandasyde/Desktop/Code/POCS/nextjs-poc/clients/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ;oBAAAA,CAAUa,QAAQ;gCACxBC,IAAAA;4BAAAA,CAAM;4BAAA;iCACNC,UAAU;sCACV,IAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA,iBAA2C;oCAAA;iCAAA;;+BAC3CC,YAAY;;yBACZC,UAAU;8BACVC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA,CAAE;;aACd;kBACAC,QAAAA,CAAU,CAAA;YAAA;SAAA;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}